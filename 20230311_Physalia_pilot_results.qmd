---
title: "_Physalia_ global population genomics: pilot dataset"
format:
  html:
    embed-resources: true
theme: cosmo
---

Samuel H. Church

Initiated: March, 2023

```{r init}
#| include: false

library(gridExtra)
library(ggplot2)
#library(RcppCNPy)
library(dplyr)
library(knitr)
library(kableExtra)

theme_set(theme_classic())
```

# Samples

This pilot population genomic study uses 8 samples from 4 locations.

```{r}
#| echo: false
location_info <- read.table("results/Atlantic/pilot_pcangsd.info",head=T)
sample_info <- data.frame(sample = read.table("results/Atlantic/bam.filelist",head=F) %>% 
	apply(.,1,function(x){gsub(".*sorted/(.*)_dedup.bam","\\1",x)})) %>% 
	left_join(.,location_info,by="sample")
kable(sample_info) %>%
  kable_styling(font_size = 16)
```

# Mapping

Reads were trimmed with `trimmomatic` and mapped with `bwa mem`.

We first mapped to the 2021 assembly of an Atlantic genome, done by Zack lewis.

Mapping statistics were evaluated with `samtools flagstat`.

```{r mapstat-atl}
#| echo: false
reads_info <- read.delim("results/Atlantic/pilot_reads_info.tsv",header=T,stringsAsFactors=F)
kable(reads_info,format.args = list(big.mark = ",")) %>%
  kable_styling(font_size = 12)
```

We also mapped to the 2023 assembly of a Pacfic genome, done by Ozren and Alex.

```{r mapstat-pac}
#| echo: false
reads_info <- read.delim("results/mapped_to_Pacific/pilot_reads_info.tsv",header=T,stringsAsFactors=F)
kable(reads_info,format.args = list(big.mark = ",")) %>%
  kable_styling(font_size = 12)
```

# `picard`

Reads were then re-sorted by coordinate and deduplicated using `picard`

```{bash picard}
# java -jar $EBROOTPICARD/picard.jar SortSam \
#                 I={input} \
#                 O={output} \
#                 SORT_ORDER=coordinate 2> {log}

# java -jar $EBROOTPICARD/picard.jar MarkDuplicates \
#                 I={input} \
#                 O={output.DEDUP} \
#                 M={output.METRIC} \
#                 REMOVE_DUPLICATES=true 2> {log}
```

# `angsd` and `pcangsd`

`angsd` estimates genotype likelihoods from mapped reads, and was called as follows:

```{bash angsd}
# angsd -GL 1 \ #estimate genotype likelihoods
# 	-out pilot_genolike \ #output 
# 	-nThreads 25 \ #cores
# 	-doGlf 2 \ #output likelihoods to a beagle type file
# 	-doMajorMinor 1 \ #infer major and minor allele
# 	-doMaf 2 \ #infer only major allele, sum over 3 possible minor alleles
# 	-SNP_pval 1e-6 \ #remove sites with pval larger than 1e-6
# 	-bam bam.filelist \ #input filelist
# 	-minMapQ 30 \ #discard mapQ quality lower than 30
# 	-minQ 20 \ #discard bases with qscore lower than 20
# 	-doCounts 1 \ #estimate base frequencies
# 	-doDepth 1 #output depth distribution
```

The bam.filelist reads as follows:
```{bash bamfile}
#  3-Japan_dedup.bam
#  6-Japan_dedup.bam
#  Bermuda-67_dedup.bam
#  Bermuda-94_dedup.bam
#  Physalia-NA22_dedup.bam
#  Physalia-NA24_dedup.bam
#  YPM110251_dedup.bam
#  YPM110254_dedup.bam
```

## depth distributions

`angsd` will print out the number of sites with a sequencing depth of 0,1,2,...

The maximum depth here is 100, all depths above that are binned at 100. 


```{r depth}
#| echo: false
#| fig-width: 10
#| fig-height: 10

depth_sample <- read.delim("results/Atlantic/pilot_genolike.depthSample",header=F)
colnames(depth_sample) <- seq(0,101)
ds <- depth_sample %>% select(-`101`) %>% 
	mutate(sample=sample_info$sample,
		location=sample_info$location) %>% 
	tidyr::pivot_longer(cols=-c(sample,location),names_to="reads") %>%
	mutate(reads = as.numeric(reads)) 
g1 <- ggplot(ds,aes(x=reads,y=value,color=location,group=sample)) + 
	geom_point(size=0.5) + geom_line() + 
	xlab("sequencing depth") + ylab("number of sites") +
	ggtitle("mapped to Atlantic genome, depth by site") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

filtered_info <- data.frame(sample = read.table("results/Atlantic_filtered/bam.filelist",head=F) %>% 
	apply(.,1,function(x){gsub(".*sorted/(.*)_dedup.bam","\\1",x)})) %>% 
	left_join(.,location_info,by="sample")

depth_sample <- read.delim("results/Atlantic_filtered/pilot.depthSample",header=F)
colnames(depth_sample) <- seq(0,101)
ds <- depth_sample %>% select(-`101`) %>% 
	mutate(sample=filtered_info$sample,
		location=filtered_info$location) %>% 
	tidyr::pivot_longer(cols=-c(sample,location),names_to="reads") %>%
	mutate(reads = as.numeric(reads)) 
g2 <- ggplot(ds,aes(x=reads,y=value,color=location,group=sample)) + 
	geom_point(size=0.5) + geom_line() + 
	xlab("sequencing depth") + ylab("number of sites") +
	ggtitle("mapped to Atlantic genome, exons only") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

mapPac_info <- data.frame(sample = read.table("results/mapped_to_Pacific/bam.filelist",head=F) %>% 
	apply(.,1,function(x){gsub(".*sorted/(.*)_dedup.bam","\\1",x)})) %>% 
	left_join(.,location_info,by="sample")

depth_sample <- read.delim("results/mapped_to_Pacific/pilot.depthSample",header=F)
colnames(depth_sample) <- seq(0,101)
ds <- depth_sample %>% select(-`101`) %>% 
	mutate(sample=mapPac_info$sample,
		location=mapPac_info$location) %>% 
	tidyr::pivot_longer(cols=-c(sample,location),names_to="reads") %>%
	mutate(reads = as.numeric(reads)) 
g3 <- ggplot(ds,aes(x=reads,y=value,color=location,group=sample)) + 
	geom_point(size=0.5) + geom_line() + 
	xlab("sequencing depth") + ylab("number of sites") +
	ggtitle("mapped to Pacific genome") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

grid.arrange(g1,g2,g3,nrow=3)
```

# PCA of genotype likelihoods

`pcangsd` was run as follows:

```{bash pcangsd}
# pcangsd \
# 	-b ~/scratch60/20230117_Phy_skim_variants/angsd/pilot_genolike.beagle.gz \ #beagle input, from angsd
# 	-o pilot_pcangsd \ #output
# 	--threads 14 \ #cores
# 	--admix \ #estimate admixture and ancestral allele frequencies
# 	--admix_alpha 5 #alpha value for regularization in admixture estimations
# 		#= "small penalty on the admixture proportions (alpha)"
```

## eigenvalue loadings

```{r eigenvals}
#| fig-height: 3
#| fig-width: 4


# read in covariance
cov <- as.matrix(read.table("results/Atlantic/pilot_pcangsd.cov"))
# estimate eigenvectors and eigenvalues
e<-eigen(cov)

plot(e$values,ylab="eigenvalues",xlab="index",pch=16)
```

## principal component analysis

The results, mapping to the Atlantic genome.

```{r PCA}
#| echo: false
#| fig-width: 10
#| fig-height: 8

g4 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,1],y=e$vectors[,2],color=sample_info$location,label=sample_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC1") + 
	ylab("pcangsd PC2") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("first two principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g5 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,2],y=e$vectors[,3],color=sample_info$location,label=sample_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC2") + 
	ylab("pcangsd PC3") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("second and third principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g6 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,3],y=e$vectors[,4],color=sample_info$location,label=sample_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC3") + 
	ylab("pcangsd PC4") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("third and fourth principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g7 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,4],y=e$vectors[,5],color=sample_info$location,label=sample_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC4") + 
	ylab("pcangsd PC5") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("third and fourth principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

grid.arrange(g4,g5,g6,g7,nrow=2)
```

The results, mapping to the Atlantic genome, filtered to exons.

```{r e-filt}
#| echo: false
#| fig-height: 3
#| fig-width: 4

# read in covariance
cov <- as.matrix(read.table("results/Atlantic_filtered/pilot.cov"))
# estimate eigenvectors and eigenvalues
e<-eigen(cov)

plot(e$values,ylab="eigenvalues",xlab="index",pch=16)
```

```{r PCA-filt}
#| echo: false
#| fig-width: 10
#| fig-height: 8

g8 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,1],y=e$vectors[,2],color=filtered_info$location,label=filtered_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC1") + 
	ylab("pcangsd PC2") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("first two principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g9 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,2],y=e$vectors[,3],color=filtered_info$location,label=filtered_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC2") + 
	ylab("pcangsd PC3") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("second and third principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g10 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,3],y=e$vectors[,4],color=filtered_info$location,label=filtered_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC3") + 
	ylab("pcangsd PC4") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("third and fourth principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g11 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,4],y=e$vectors[,5],color=filtered_info$location,label=filtered_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC4") + 
	ylab("pcangsd PC5") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("third and fourth principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

grid.arrange(g8,g9,g10,g11,nrow=2)
```

The results, mapping to the Pacific genome.

```{r e-mapPac}
#| echo: false
#| fig-height: 3
#| fig-width: 4

# read in covariance
cov <- as.matrix(read.table("results/mapped_to_Pacific/pilot.cov"))
# estimate eigenvectors and eigenvalues
e<-eigen(cov)

plot(e$values,ylab="eigenvalues",xlab="index",pch=16)
```

```{r PCA-mapPac}
#| echo: false
#| fig-width: 10
#| fig-height: 8

g8 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,1],y=e$vectors[,2],color=mapPac_info$location,label=mapPac_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC1") + 
	ylab("pcangsd PC2") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("first two principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g9 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,2],y=e$vectors[,3],color=mapPac_info$location,label=mapPac_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC2") + 
	ylab("pcangsd PC3") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("second and third principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g10 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,3],y=e$vectors[,4],color=mapPac_info$location,label=mapPac_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC3") + 
	ylab("pcangsd PC4") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("third and fourth principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

g11 <- ggplot(data.frame(e$vectors),aes(x=e$vectors[,4],y=e$vectors[,5],color=mapPac_info$location,label=mapPac_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC4") + 
	ylab("pcangsd PC5") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("third and fourth principal components") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

grid.arrange(g8,g9,g10,g11,nrow=2)
```

## admixture

`pcangsd` can also estimate admixture across populations.

Here we are using the first two principal components, mapping to the Pacific genome.


```{r admix}
#| echo: false
#| fig-width: 8
#: fig-height: 3
# read in admix results


q <- read.delim("results/Atlantic/pilot_pcangsd.admix.2.Q",header=F,sep=" ") 

ggplot(q %>% 
		mutate("sample" = sample_info$sample, location = sample_info$location) %>% 
		tidyr::pivot_longer(cols=c(V1,V2),names_to="PC"),
	aes(factor(sample,levels=sample_info$sample[order(sample_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none")
```

Here are the results, mapping to only exons. The number of populations have been chosen by `pcangsd` (2), and then fixed at 3, 4, and 5.

```{r admix-filt}
#| echo: false
# read in admix results
#| fig-width: 8
#: fig-height: 3

q2 <- read.delim("results/Atlantic_filtered/pilot.admix.2.Q",header=F,sep=" ") 

g2 <- ggplot(q2 %>% 
		mutate("sample" = filtered_info$sample, location = filtered_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=filtered_info$sample[order(filtered_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q3 <- read.delim("results/Atlantic_filtered/pilot.admix.3.Q",header=F,sep=" ") 

g3 <- ggplot(q3 %>% 
		mutate("sample" = filtered_info$sample, location = filtered_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=filtered_info$sample[order(filtered_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q4 <- read.delim("results/Atlantic_filtered/pilot.admix.4.Q",header=F,sep=" ") 

g4 <- ggplot(q4 %>% 
		mutate("sample" = filtered_info$sample, location = filtered_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=filtered_info$sample[order(filtered_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q5 <- read.delim("results/Atlantic_filtered/pilot.admix.5.Q",header=F,sep=" ") 

g5 <- ggplot(q5 %>% 
		mutate("sample" = filtered_info$sample, location = filtered_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=filtered_info$sample[order(filtered_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

grid.arrange(g2,g3,g4,g5,nrow=2)
```

Here is the same plot, mapped to the Pacific genome.

```{r admix-mapPac}
#| echo: false
# read in admix results
#| fig-width: 8
#: fig-height: 3

q2 <- read.delim("results/mapped_to_Pacific/pilot.admix.2.Q",header=F,sep=" ") 

g2 <- ggplot(q2 %>% 
		mutate("sample" = mapPac_info$sample, location = mapPac_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=mapPac_info$sample[order(mapPac_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q3 <- read.delim("results/mapped_to_Pacific/pilot.admix.3.Q",header=F,sep=" ") 

g3 <- ggplot(q3 %>% 
		mutate("sample" = mapPac_info$sample, location = mapPac_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=mapPac_info$sample[order(mapPac_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q4 <- read.delim("results/mapped_to_Pacific/pilot.admix.4.Q",header=F,sep=" ") 

g4 <- ggplot(q4 %>% 
		mutate("sample" = mapPac_info$sample, location = mapPac_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=mapPac_info$sample[order(mapPac_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q5 <- read.delim("results/mapped_to_Pacific/pilot.admix.5.Q",header=F,sep=" ") 

g5 <- ggplot(q5 %>% 
		mutate("sample" = mapPac_info$sample, location = mapPac_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=mapPac_info$sample[order(mapPac_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

	grid.arrange(g2,g3,g4,g5,nrow=2)
```

# Subsampling analysis

Sequencing depth as we subsample reads

```{r sub-depth}
#| echo: false
#| fig-width: 10

sub1_info <- data.frame(sample = read.table("results/subsampling_1x/bam.filelist",head=F) %>% 
	apply(.,1,function(x){gsub(".*sorted/(.*)_pic.bam","\\1",x)})) %>% 
	left_join(.,location_info,by="sample")

depth_sample <- read.delim("results/subsampling_1x/pilot.depthSample",header=F)
colnames(depth_sample) <- seq(0,101)
ds <- depth_sample %>% select(-`101`) %>% 
	mutate(sample=sub1_info$sample,
		location=sub1_info$location) %>% 
	tidyr::pivot_longer(cols=-c(sample,location),names_to="reads") %>%
	mutate(reads = as.numeric(reads)) 
g1 <- ggplot(ds,aes(x=reads,y=value,color=location,group=sample)) + 
	geom_point(size=0.5) + geom_line() + 
	xlab("sequencing depth") + ylab("number of sites") + 
	theme(legend.position="none") +
	ggtitle("Depth by site, 1x") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

sub5_info <- data.frame(sample = read.table("results/subsampling_5x/bam.filelist",head=F) %>% 
	apply(.,1,function(x){gsub(".*sorted/(.*)_pic.bam","\\1",x)})) %>% 
	left_join(.,location_info,by="sample")

depth_sample <- read.delim("results/subsampling_5x/pilot.depthSample",header=F)
colnames(depth_sample) <- seq(0,101)
ds <- depth_sample %>% select(-`101`) %>% 
	mutate(sample=sub5_info$sample,
		location=sub5_info$location) %>% 
	tidyr::pivot_longer(cols=-c(sample,location),names_to="reads") %>%
	mutate(reads = as.numeric(reads)) 
g2 <- ggplot(ds,aes(x=reads,y=value,color=location,group=sample)) + 
	geom_point(size=0.5) + geom_line() + 
	xlab("sequencing depth") + ylab("number of sites") + 
	theme(legend.position="none") +
	ggtitle("Depth by site, 5x") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

sub10_info <- data.frame(sample = read.table("results/subsampling_10x/bam.filelist",head=F) %>% 
	apply(.,1,function(x){gsub(".*sorted/(.*)_pic.bam","\\1",x)})) %>% 
	left_join(.,location_info,by="sample")

depth_sample <- read.delim("results/subsampling_10x/pilot.depthSample",header=F)
colnames(depth_sample) <- seq(0,101)
ds <- depth_sample %>% select(-`101`) %>% 
	mutate(sample=sub10_info$sample,
		location=sub10_info$location) %>% 
	tidyr::pivot_longer(cols=-c(sample,location),names_to="reads") %>%
	mutate(reads = as.numeric(reads)) 
g3 <- ggplot(ds,aes(x=reads,y=value,color=location,group=sample)) + 
	geom_point(size=0.5) + geom_line() + 
	xlab("sequencing depth") + ylab("number of sites") + 
	theme(legend.position="none") +
	ggtitle("Depth by site, 10x") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

grid.arrange(g1,g2,g3,nrow=3)
```

PCA as we subsample

```{r sub-pca}
#| echo: false
#| fig-width: 10
#| fig-height: 8

cov1 <- as.matrix(read.table("results/subsampling_1x/pilot.cov"))
e1<-eigen(cov1)

g1 <- ggplot(data.frame(e1$vectors),aes(x=e1$vectors[,1],y=e1$vectors[,2],color=sub1_info$location,label=sub1_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC1") + 
	ylab("pcangsd PC2") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("subsample 1x") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

cov5 <- as.matrix(read.table("results/subsampling_5x/pilot.cov"))
e5<-eigen(cov5)

g2 <- ggplot(data.frame(e5$vectors),aes(x=e5$vectors[,1],y=e5$vectors[,2],color=sub5_info$location,label=sub5_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC1") + 
	ylab("pcangsd PC2") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("subsample 5x") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

cov10 <- as.matrix(read.table("results/subsampling_10x/pilot.cov"))
e10<-eigen(cov10)

g3 <- ggplot(data.frame(e10$vectors),aes(x=e10$vectors[,1],y=e10$vectors[,2],color=sub10_info$location,label=sub10_info$sample)) + 
	geom_point(size=4,alpha=0.5) + 
	xlab("pcangsd PC1") + 
	ylab("pcangsd PC2") + 
	geom_text(size=4,hjust=0,vjust=0) +
	ggtitle("subsample 10x") + 
	theme(legend.position="none") + 
	scale_color_manual(values = c("cyan","blue","dark red", "magenta"))

grid.arrange(g1,g2,g3,nrow=2)
```

Admixture as we subsample

Subsampling to 1x

```{r sub-admix-1}
#| echo: false
# read in admix results
#| fig-width: 8
#: fig-height: 3

q2 <- read.delim("results/subsampling_1x/pilot.admix.2.Q",header=F,sep=" ") 

g2 <- ggplot(q2 %>% 
		mutate("sample" = sub1_info$sample, location = sub1_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub1_info$sample[order(sub1_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q3 <- read.delim("results/subsampling_1x/pilot.admix.3.Q",header=F,sep=" ") 

g3 <- ggplot(q3 %>% 
		mutate("sample" = sub1_info$sample, location = sub1_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub1_info$sample[order(sub1_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q4 <- read.delim("results/subsampling_1x/pilot.admix.4.Q",header=F,sep=" ") 

g4 <- ggplot(q4 %>% 
		mutate("sample" = sub1_info$sample, location = sub1_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub1_info$sample[order(sub1_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q5 <- read.delim("results/subsampling_1x/pilot.admix.5.Q",header=F,sep=" ") 

g5 <- ggplot(q5 %>% 
		mutate("sample" = sub1_info$sample, location = sub1_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub1_info$sample[order(sub1_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

grid.arrange(g2,g3,g4,g5,nrow=2)
```

Subsampling to 5x

```{r sub-admix-5}
#| echo: false
# read in admix results
#| fig-width: 8
#: fig-height: 3

q2 <- read.delim("results/subsampling_5x/pilot.admix.2.Q",header=F,sep=" ") 

g2 <- ggplot(q2 %>% 
		mutate("sample" = sub5_info$sample, location = sub5_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub5_info$sample[order(sub5_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q3 <- read.delim("results/subsampling_5x/pilot.admix.3.Q",header=F,sep=" ") 

g3 <- ggplot(q3 %>% 
		mutate("sample" = sub5_info$sample, location = sub5_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub5_info$sample[order(sub5_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q4 <- read.delim("results/subsampling_5x/pilot.admix.4.Q",header=F,sep=" ") 

g4 <- ggplot(q4 %>% 
		mutate("sample" = sub5_info$sample, location = sub5_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub5_info$sample[order(sub5_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q5 <- read.delim("results/subsampling_5x/pilot.admix.5.Q",header=F,sep=" ") 

g5 <- ggplot(q5 %>% 
		mutate("sample" = sub5_info$sample, location = sub5_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub5_info$sample[order(sub5_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

grid.arrange(g2,g3,g4,g5,nrow=2)
```

Subsampling to 10x

```{r sub-admix-10}
#| echo: false
# read in admix results
#| fig-width: 8
#: fig-height: 3

q2 <- read.delim("results/subsampling_10x/pilot.admix.2.Q",header=F,sep=" ") 

g2 <- ggplot(q2 %>% 
		mutate("sample" = sub10_info$sample, location = sub10_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub10_info$sample[order(sub10_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q3 <- read.delim("results/subsampling_10x/pilot.admix.3.Q",header=F,sep=" ") 

g3 <- ggplot(q3 %>% 
		mutate("sample" = sub10_info$sample, location = sub10_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub10_info$sample[order(sub10_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q4 <- read.delim("results/subsampling_10x/pilot.admix.4.Q",header=F,sep=" ") 

g4 <- ggplot(q4 %>% 
		mutate("sample" = sub10_info$sample, location = sub10_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub10_info$sample[order(sub10_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

q5 <- read.delim("results/subsampling_10x/pilot.admix.5.Q",header=F,sep=" ") 

g5 <- ggplot(q5 %>% 
		mutate("sample" = sub10_info$sample, location = sub10_info$location) %>% 
		tidyr::pivot_longer(cols=starts_with("V"),names_to="PC"),
	aes(factor(sample,levels=sub10_info$sample[order(sub10_info$location)]),value,fill=PC)) + 
	geom_col(position="fill") + 
		xlab("samples by location") + 
	ylab("proportion") + 
	theme(legend.position="none",axis.text=element_text(size=4))

grid.arrange(g2,g3,g4,g5,nrow=2)
```

# Estimating parameters of diversity

Using `pixy`, we can estimate diversity between the Pacific and Atlantic populations. It was called as follows:

```{bash pixy}
# tabix -p vcf {input.vcf.gz}
# pixy --stats pi fst dxy --vcf {input.vcf.gz} --populations {populations file} --n_cores 8 --window_size 500000 --output_folder {output}
```

Here we examine how these numbers vary as we change the sampling procedure. 

```{r pixy-stats}
#| echo: false
# read in admix results

fst_1x <- read.delim("results/subsampling_1x/pixy_fst.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_snps > 3) %>% pull(avg_wc_fst) %>% mean(na.rm=T)
fst_5x <- read.delim("results/subsampling_5x/pixy_fst.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_snps > 3) %>% pull(avg_wc_fst) %>% mean(na.rm=T)
fst_10x <- read.delim("results/subsampling_10x/pixy_fst.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_snps > 3) %>% pull(avg_wc_fst) %>% mean(na.rm=T)
dxy_1x <- read.delim("results/subsampling_1x/pixy_dxy.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_sites > 3) %>% pull(avg_dxy) %>% mean(na.rm=T)
dxy_5x <- read.delim("results/subsampling_5x/pixy_dxy.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_sites > 3) %>% pull(avg_dxy) %>% mean(na.rm=T)
dxy_10x <- read.delim("results/subsampling_10x/pixy_dxy.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_sites > 3) %>% pull(avg_dxy) %>% mean(na.rm=T)
pi_1x <- read.delim("results/subsampling_1x/pixy_pi.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_sites > 3) %>% pull(avg_pi) %>% mean(na.rm=T)
pi_5x <- read.delim("results/subsampling_5x/pixy_pi.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_sites > 3) %>% pull(avg_pi) %>% mean(na.rm=T)
pi_10x <- read.delim("results/subsampling_10x/pixy_pi.txt",sep="\t",header=T,stringsAsFactors=F) %>% filter(no_sites > 3) %>% pull(avg_pi) %>% mean(na.rm=T)

kable(data.frame(subsampling = c("1x","5x","10x"),
	Fst = round(c(fst_1x,fst_5x,fst_10x),4),
	Dxy = round(c(dxy_1x,dxy_5x,dxy_10x),4),
	pi = round(c(pi_1x,pi_5x,pi_10x),4)
	)) %>%
  kable_styling(font_size = 16)
```
