---
title: "_Physalia_ global population genomics: Fig. 4"
format:
  html:
    embed-resources: true
theme: cosmo
---

Samuel H. Church

Initiated: Feb, 2024

```{r init}
#| include: false

library(gridExtra)
library(ggplot2)
#library(RcppCNPy)
library(dplyr)
library(knitr)
library(kableExtra)
library(tidyr)
library(ggrepel)
library(maps)
library(viridis)

theme_set(theme_classic())

library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(geosphere)

```

```{r setup}
#| echo: false
metadata <- read.delim("../data/metadata.tsv",header=T,stringsAsFactors=F) %>% filter(status %in% c("sequenced","sequenced elsewhere"))

sample_info <- read.delim("../data/sample_ids.tsv",header=T,stringsAsFactors=F) %>%
  mutate(year = gsub(".*/(.*)","\\1",date_collected), month = as.numeric(gsub("(.*)/.*/.*","\\1",date_collected))) %>% 
  separate(lat_long,into=c("lat","long"),sep=", ")
locations <- sample_info %>% pull(location) %>% unique()

colors <- c("#E78AC3","#00008B","#800000","#DAA520","#006400","#A6D854","#DC143C","#FC8D62","#452a00","#8DA0CB","#66C2A5","#B3B3B3")
names(colors) <- c("Central Pacific","E Indian","Gulf of California","Gulf of Mexico","NE Atlantic","NW Atlantic","NW Pacific","SE Pacific","SW Atlantic","SW Pacific","W Indian")

ocean_levels <- c("Gulf of Mexico","NW Atlantic","NE Atlantic","SW Atlantic","W Indian","E Indian","SW Pacific","NW Pacific","Central Pacific","Gulf of California","SE Pacific")
sample_info$ocean <- factor(sample_info$ocean,levels=ocean_levels)

# set up the globe and projection
LeftBound = -90
world <- ne_countries(scale = "medium", returnclass = "sf") %>% st_set_crs(4326)
robinson = paste("+proj=robin +lon_0=",LeftBound," +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs",sep="")
world2 = world %>% st_break_antimeridian(lon_0 = LeftBound) %>% st_transform(crs = robinson)
```

```{r setup-pc}
set.seed(123)

#   dir <- "../results/physalis_results/"
#   name <- "physalis"
#   bam_list <- paste0(dir,"physalis.filelist")
#   LeftBound = -40 # utriculus 65, # physalis -40 # megalista 150
#   xlims <- c(-5531246,4988384)
#   ylims <- c(1752559,6526207)
#   k <- 2

#    dir <- "../results/utriculus_results/"
#    name <- "utriculus"
#    bam_list <- paste0(dir,"utriculus.filelist")
#    LeftBound = 65 # utriculus 65, # physalis -40 # megalista 150
#    xlims <- c(-10596597,12899112)
#    ylims <- c(-4630816,4186408)
#    k <- 3

    dir <- "../results/borealis_results/"
    name <- "borealis"
    bam_list <- paste0(dir,"borealis.filelist")
    LeftBound = 100 # utriculus 65, # physalis -40 # megalista 150
    xlims <- c(-14596597,13899112)
    ylims <- c(-4230816,3986408)
    k <- 4

#  dir <- "../results/megalista_results/"
#  name <- "megalista"
#  bam_list <- paste0(dir,"megalista.filelist")
#  LeftBound = 150 # utriculus 65, # physalis -40 # megalista 150
#   xlims <- c(-10718930,12576348)
#   ylims <- c(-7635085,0)
#   k <- 2

#  dir <- "../results/C2_results/"
#  name <- "C2"
#  bam_list <- paste0(dir,"C2.filelist")
#  LeftBound = 150 # utriculus 65, # physalis -40 # megalista 150
#   xlims <- c(-10718930,12576348)
#   ylims <- c(-7635085,0)
#   k <- 2

PC_info <- data.frame(ID = read.table(bam_list,head=F) %>% 
  apply(.,1,function(x){gsub(".*sorted/(.*)_pic.bam","\\1",x)})) %>% 
  left_join(.,sample_info,by="ID")

cov <- as.matrix(read.table(paste0(dir,name,".cov")))
e<-eigen(cov)
exp_var <- paste0(round(e$values / sum(e$values) *100,1),"%")

kmeans_result <- kmeans(cov, centers = k)

n_vectors <- ncol(e$vectors)
e_vectors <- e$vectors[,1:n_vectors]
colnames(e_vectors) <- paste0("PC",seq(1:n_vectors))
PC_info <- bind_cols(PC_info,e_vectors) %>% mutate(kmeans_cluster = paste0(name,"_",kmeans_result$cluster))

pdf(paste0("../figures/panels/",name,"_cov.pdf"),width=4,height=3,useDingbats=F)
plot(e$values[0:n_vectors],ylab="eigenvalues",xlab="k",pch=16,cex=0.5)
abline(v=k,lty="dotted")
dev.off()
``` 

```{r dist}
geo_dist <- distm(sample_info %>% select(long,lat) %>% mutate_all(as.numeric) %>% as.data.frame, fun = distVincentySphere) %>% 
  as.data.frame %>% rename_all(~sample_info$ID) %>% mutate(IndA = sample_info$ID) %>% 
  pivot_longer(cols = -IndA, values_to = "geo_dist", names_to = "IndB")

# calculate distance in PC space
make_ind_pc_dist <- function(PC,vectors,sample_names){
  dist(vectors[,PC],method="euclidean") %>% as.matrix %>% as.data.frame %>%
  rename_all(~sample_names) %>% mutate(IndA = sample_names) %>%
  pivot_longer(cols=-IndA,names_to="IndB",values_to="pc_dist")
}

pcds <- lapply(seq(1:ncol(e$vectors)),make_ind_pc_dist,vectors=e$vectors,sample_names = PC_info$ID)

compare_geo_pc_distances <- sapply(pcds,function(x){
  p <- left_join(x,geo_dist,by=c("IndA","IndB"))
  summary(lm(pc_dist ~ geo_dist, data = p))$adj.r.squared
})

pdf(paste0("../figures/panels/",name,"_regress_geo_PC.pdf"),width=8,height=4,useDingbats=F)
plot(compare_geo_pc_distances,pch=16,xlab="Num. PCs",ylab="R2 of regression PC vs geo. distance",cex=2)
dev.off()
```


```{r pca-curves}
shapes <- c(15,16,17,25,22,23,8,3,
            23,8,4,15,3,16,17,25,22,
            7,12,
            10,9)
names(shapes) <- c("Texas","Florida","Bermuda","Northeast US","Azores","Canary Islands","Spain","Ireland",
  "Hawai'i","NW Hawaiian Islands","Guam","Japan","Queensland","New South Wales","Western Australia","South Africa","Uruguay",
  "Chile","Tasmania",
  "Mexico","Breaker Bay")

g1 <- ggplot(PC_info,aes(x = 1*PC1, y = -1*PC2, color = ocean, shape = location)) + 
  geom_vline(xintercept=0, linetype="dotted", alpha=0.2) +
  geom_hline(yintercept=0, linetype="dotted", alpha=0.2) +
  geom_point(size = 2.5,alpha=0.75) + 
  scale_shape_manual(values = shapes) + 
  scale_color_manual(values = colors) + 
  xlab(paste0("PC1 : ",exp_var[1])) +
  ylab(paste0("PC2 : ",exp_var[2])) + 
  theme(legend.position="none")

pdf(paste0("../figures/panels/",name,"_PCA.pdf"),width=3.5,height=2,useDingbats=F)
print(g1)
dev.off()

g2 <- ggplot(PC_info %>% mutate(date = lubridate::mdy(date_collected)),aes(x = 1*PC1, y = -1*PC2, color = date, shape=location)) + 
  geom_vline(xintercept=0, linetype="dotted", alpha=0.2) +
  geom_hline(yintercept=0, linetype="dotted", alpha=0.2) +
  geom_point(size = 2.5, alpha=1, fill="white") + 
  scale_shape_manual(values = shapes) + 
  scale_color_viridis(option ="G", trans="date", limits=as.Date(c("01/01/2013","12/31/2023"),format="%m/%d/%Y")) + 
  xlab(paste0("PC1 : ",exp_var[1])) +
  ylab(paste0("PC2 : ",exp_var[2])) +
  theme(legend.position="none")

pdf(paste0("../figures/panels/",name,"_PCA_date.pdf"),width=3.5,height=2,useDingbats=F)
print(g2)
dev.off()

g3 <- ggplot(PC_info,aes(x = 1*PC1, y = -1*PC2, color = kmeans_cluster, shape = location, label=ID)) + 
  geom_vline(xintercept=0, linetype="dotted", alpha=0.2) +
  geom_hline(yintercept=0, linetype="dotted", alpha=0.2) +
  geom_point(size = 2.5,alpha=0.75) + 
  scale_shape_manual(values = shapes) + 
  scale_color_brewer(palette = "Dark2") + 
  xlab(paste0("PC1 : ",exp_var[1])) +
  ylab(paste0("PC2 : ",exp_var[2])) + 
  theme(legend.position="none")

pdf(paste0("../figures/panels/",name,"_PCA_kmeans.pdf"),width=3.5,height=2,useDingbats=F)
print(g3)
dev.off()

write.table(file=paste0("../data/",name,"_kmeans_assignments.tsv"),sep="\t",PC_info %>% select(ID,kmeans_cluster),row.names=F,quote=F)
write.table(file=paste0("../data/",name,"_locations.tsv"),sep="\t",PC_info %>% select(ID,ocean),row.names=F,quote=F)
```


```{r map-curves}
# set up the globe and projection
world <- ne_countries(scale = "medium", returnclass = "sf") %>% st_set_crs(4326)
robinson = paste("+proj=robin +lon_0=",LeftBound," +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs",sep="")
world3 = world %>% st_break_antimeridian(lon_0 = LeftBound) %>% st_transform(crs = robinson)

transpoint = st_as_sf(PC_info,coords=c("long","lat"),crs=4326)
dtran = st_transform(transpoint,robinson)

coords <- st_coordinates(dtran$geometry)
tsi <- PC_info %>% mutate(long = as.numeric(coords[, "X"]),
                          lat = as.numeric(coords[, "Y"]))

g2 <- ggplot() + 
  geom_sf(data = world3, fill = "#dbdbdb", colour = NA) + 
  coord_sf(xlim = xlims, ylim = ylims) +
  geom_point(data = tsi, aes(x = long, y = lat, color = ocean, shape = location),
        fill = "white", size = 3) + 
  scale_shape_manual(values = shapes) + 
  scale_color_manual(values = colors) + 
  xlab("") + ylab("") + theme(legend.position="none") #+
  #theme(panel.background = element_rect(fill = "#d4ebf2"))

pdf(paste0("../figures/panels/",name,"_map.pdf"),width=5,height=3,useDingbats=F)
print(g2)
dev.off()
```
